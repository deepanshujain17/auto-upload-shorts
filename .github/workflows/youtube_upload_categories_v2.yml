name: Daily YouTube Upload - Categories V2

on:
  # 12:30 UTC = 18:00 IST. IST is UTC + 5:30 hours
  schedule:
    # Weekdays: 6 AM, 8 AM IST
    - cron: '30 0,2 * * 1-5'
    # Weekends: 6 AM, 8 AM IST
    - cron: '30 0,2 * * 6,0'
  workflow_dispatch: # Allow manual runs too

jobs:
  upload:
    # Option 1: Use container (FASTEST)
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim
      options: --user root

    steps:
    - name: Print Timestamp
      run: date -u

    - name: Checkout repo
      uses: actions/checkout@v4  # Updated to v4

    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y ffmpeg git curl
        apt-get install -y wget gnupg ca-certificates
        apt-get install -y libx11-xcb1 libxcomposite1 libxdamage1 libxi6 libxtst6 libnss3 libnspr4 libasound2 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdbus-1-3 libxkbcommon0 libxrandr2 libgbm1 libpango-1.0-0 libcairo2 libatspi2.0-0 fonts-liberation

    - name: Install Google Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
        apt-get install -y google-chrome-stable
        rm -rf /var/lib/apt/lists/*

    - name: Check versions
      run: |
        google-chrome --version
        python -c "from webdriver_manager.chrome import ChromeDriverManager; print(ChromeDriverManager().install())"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pip install --no-cache-dir -r requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4  # Updated to v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup environment and secrets
      run: |
        echo "GNEWS_API_KEY=${{ secrets.GNEWS_API_KEY }}" > .env
        echo "${{ secrets.TOKEN_PKL_B64 }}" | base64 -d > token.pkl
        echo "${{ secrets.CLIENT_SECRETS_B64 }}" | base64 -d > client_secrets.json

    - name: Run upload script
      run: python main.py categories
